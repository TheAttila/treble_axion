From f1ee7e035784e21c1f13583914eba9659f998add Mon Sep 17 00:00:00 2001
From: Your Dominggoes Isakh <drjisakh@gmail.com>
Date: Wed, Oct 12 15:27:37 2022 +0200
Subject: [PATCH 05/06] NetdUpdatable: Disable bpf initialization when eBPF is
 not available

---
 bpf/netd/NetdUpdatable.cpp | 13 +++++++++----
 1 file changed, 9 insertions(+), 4 deletions(-)

diff --git a/bpf/netd/NetdUpdatable.cpp b/bpf/netd/NetdUpdatable.cpp
index 8b9e5a7..681ea64 100644
--- a/bpf/netd/NetdUpdatable.cpp
+++ b/bpf/netd/NetdUpdatable.cpp
@@ -19,6 +19,7 @@
 #include "BpfHandler.h"
 
 #include <android-base/logging.h>
+#include <cutils/properties.h>
 #include <netdutils/Status.h>
 
 #include "NetdUpdatablePublic.h"
@@ -29,10 +30,14 @@ int libnetd_updatable_init(const char* cg2_path) {
     android::base::InitLogging(/*argv=*/nullptr);
     LOG(INFO) << __func__ << ": Initializing";
 
-    android::netdutils::Status ret = sBpfHandler.init(cg2_path);
-    if (!android::netdutils::isOk(ret)) {
-        LOG(ERROR) << __func__ << ": Failed. " << ret.code() << " " << ret.msg();
-        return -ret.code();
+    char value[PROP_VALUE_MAX] = "";
+    bool ebpf_supported = __system_property_get("ro.kernel.ebpf.supported", value) != 0 || strcmp(value, "false") == 0;
+    if (ebpf_supported) {
+        android::netdutils::Status ret = sBpfHandler.init(cg2_path);
+        if (!android::netdutils::isOk(ret)) {
+            LOG(ERROR) << __func__ << ": Failed. " << ret.code() << " " << ret.msg();
+            return -ret.code();
+        }
     }
     return 0;
 }
-- 
2.49.0

